/**
 * Lite API
 * lite api hotel booking api
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";

/**
 * Hotels service.
 * @module api/HotelsApi
 * @version 1.0.0
 */
export default class HotelsApi {
  /**
   * Constructs a new HotelsApi.
   * @alias module:api/HotelsApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  constructor(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;
  }

  /**
   * Callback function to receive the result of the getData operation.
   * @callback module:api/HotelsApi~getDataCallback
   * @param {String} error Error message, if any.
   * @param {module:model/GetData200Response} data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  // /**
  //  * Search by Destination/Hotel
  //  *
  //  * @param {String} countryCode country code Alpha-2 code (example US, RU, CN)
  //  * @param {Object} opts Optional parameters
  //  * @param {String} opts.hotelName hotel name
  //  * @param {String} opts.cityName city name
  //  * @param {Number} opts.limit limit results (max value 1000)
  //  * @param {Number} opts.offset results offset
  //  * @param {Number} opts.latitude latitude geo coordinates
  //  * @param {Number} opts.longitude longtude geo coordinates
  //  * @param {Number} opts.distance the distance starting from the selected geopgraphic point
  //  * @param {module:api/HotelsApi~getDataCallback} callback The callback function, accepting three arguments: error, data, response
  //  * data is of type: {@link module:model/GetData200Response}
  //  */
  // getData(countryCode, opts, callback) {
  //   opts = opts || {};
  //   let postBody = null;
  //   // verify the required parameter 'countryCode' is set
  //   if (countryCode === undefined || countryCode === null) {
  //     throw new Error("Missing the required parameter 'countryCode' when calling getData");
  //   }

  //   let pathParams = {
  //   };
  //   let queryParams = {
  //     'hotelName': opts['hotelName'],
  //     'cityName': opts['cityName'],
  //     'countryCode': countryCode,
  //     'limit': opts['limit'],
  //     'offset': opts['offset'],
  //     'latitude': opts['latitude'],
  //     'longitude': opts['longitude'],
  //     'distance': opts['distance']
  //   };
  //   let headerParams = {
  //   };
  //   let formParams = {
  //   };

  //   let authNames = ['ApiKeyAuth'];
  //   let contentTypes = [];
  //   let accepts = ['application/json'];
  //   let returnType = GetData200Response;
  //   return this.apiClient.callApi(
  //     '/data', 'GET',
  //     pathParams, queryParams, headerParams, formParams, postBody,
  //     authNames, contentTypes, accepts, returnType, null, callback
  //   );
  // }

  /**
   * Callback function to receive the result of the hotelsHotelIdGet operation.
   * @callback module:api/HotelsApi~hotelsHotelIdGetCallback
   * @param {String} error Error message, if any.
   * @param {Object} data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * Get Room Availability & Rates for a Hotel ID
   * This endpoint allows you to send a hotel ID with a specific date range and in response receive all the rooms, rates that are available along with the cancelllation policies.
   * @param {Number} hotelId
   * @param {Object} opts Optional parameters
   * @param {String} opts.rid
   * @param {String} opts.xid
   * @param {String} opts.checkin
   * @param {String} opts.checkout
   * @param {Number} opts.adults
   * @param {String} opts.guestNationality
   * @param {String} opts.currency
   * @param {String} opts.sessionId
   * @param {module:api/HotelsApi~hotelsHotelIdGetCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link Object}
   */
  hotelsHotelIdGet(hotelId, opts, callback) {
    opts = opts || {};
    let postBody = null;
    // verify the required parameter 'hotelId' is set
    if (hotelId === undefined || hotelId === null) {
      throw new Error(
        "Missing the required parameter 'hotelId' when calling hotelsHotelIdGet",
      );
    }

    let pathParams = {
      hotelId: hotelId,
    };
    let queryParams = {
      checkin: opts["checkin"],
      checkout: opts["checkout"],
      adults: opts["adults"],
      guestNationality: opts["guestNationality"],
      currency: opts["currency"],
      sessionId: opts["sessionId"],
    };
    let headerParams = {
      rid: opts["rid"],
      xid: opts["xid"],
    };
    let formParams = {};

    let authNames = ["ApiKeyAuth"];
    let contentTypes = [];
    let accepts = ["application/json"];
    let returnType = Object;
    return this.apiClient.callApi(
      "/hotels/{hotelId}",
      "GET",
      pathParams,
      queryParams,
      headerParams,
      formParams,
      postBody,
      authNames,
      contentTypes,
      accepts,
      returnType,
      null,
      callback,
    );
  }

  /**
   * Callback function to receive the result of the hotelsPost operation.
   * @callback module:api/HotelsApi~hotelsPostCallback
   * @param {String} error Error message, if any.
   * @param {Object} data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * Get Minimum Price for Available Hotels
   * This endpoint allows you to send a list of hotel ID's for a specific date range and in response receive the best rate available for each of the hotel ID's. The limit is set to 200 hotels.
   * @param {Object} opts Optional parameters
   * @param {String} opts.rid
   * @param {module:model/HotelsPostRequest} opts.hotelsPostRequest
   * @param {module:api/HotelsApi~hotelsPostCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link Object}
   */
  hotelsPost(opts, callback) {
    opts = opts || {};
    let postBody = opts["hotelsPostRequest"];

    let pathParams = {};
    let queryParams = {};
    let headerParams = {
      rid: opts["rid"],
    };
    let formParams = {};

    let authNames = ["ApiKeyAuth"];
    let contentTypes = ["application/json"];
    let accepts = ["application/json"];
    let returnType = Object;
    return this.apiClient.callApi(
      "/hotels",
      "POST",
      pathParams,
      queryParams,
      headerParams,
      formParams,
      postBody,
      authNames,
      contentTypes,
      accepts,
      returnType,
      null,
      callback,
    );
  }
}
