/**
 * nlite API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HotelRates200ResponseDataRoomTypesInner from './HotelRates200ResponseDataRoomTypesInner';

/**
 * The HotelRates200ResponseData model module.
 * @module model/HotelRates200ResponseData
 * @version 1.0.0
 */
class HotelRates200ResponseData {
    /**
     * Constructs a new <code>HotelRates200ResponseData</code>.
     * @alias module:model/HotelRates200ResponseData
     */
    constructor() { 
        
        HotelRates200ResponseData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HotelRates200ResponseData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HotelRates200ResponseData} obj Optional instance to populate.
     * @return {module:model/HotelRates200ResponseData} The populated <code>HotelRates200ResponseData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HotelRates200ResponseData();

            if (data.hasOwnProperty('hotelId')) {
                obj['hotelId'] = ApiClient.convertToType(data['hotelId'], 'String');
            }
            if (data.hasOwnProperty('roomTypes')) {
                obj['roomTypes'] = ApiClient.convertToType(data['roomTypes'], [HotelRates200ResponseDataRoomTypesInner]);
            }
            if (data.hasOwnProperty('termsAndConditions')) {
                obj['termsAndConditions'] = ApiClient.convertToType(data['termsAndConditions'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HotelRates200ResponseData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HotelRates200ResponseData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['hotelId'] && !(typeof data['hotelId'] === 'string' || data['hotelId'] instanceof String)) {
            throw new Error("Expected the field `hotelId` to be a primitive type in the JSON string but got " + data['hotelId']);
        }
        if (data['roomTypes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['roomTypes'])) {
                throw new Error("Expected the field `roomTypes` to be an array in the JSON data but got " + data['roomTypes']);
            }
            // validate the optional field `roomTypes` (array)
            for (const item of data['roomTypes']) {
                HotelRates200ResponseDataRoomTypesInner.validateJsonObject(item);
            };
        }
        // ensure the json data is a string
        if (data['termsAndConditions'] && !(typeof data['termsAndConditions'] === 'string' || data['termsAndConditions'] instanceof String)) {
            throw new Error("Expected the field `termsAndConditions` to be a primitive type in the JSON string but got " + data['termsAndConditions']);
        }

        return true;
    }


}



/**
 * @member {String} hotelId
 */
HotelRates200ResponseData.prototype['hotelId'] = undefined;

/**
 * @member {Array.<module:model/HotelRates200ResponseDataRoomTypesInner>} roomTypes
 */
HotelRates200ResponseData.prototype['roomTypes'] = undefined;

/**
 * @member {String} termsAndConditions
 */
HotelRates200ResponseData.prototype['termsAndConditions'] = undefined;






export default HotelRates200ResponseData;

