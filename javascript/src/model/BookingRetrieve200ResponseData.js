/**
 * nlite API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BookingRetrieve200ResponseDataBookedRoomsInner from './BookingRetrieve200ResponseDataBookedRoomsInner';
import BookingRetrieve200ResponseDataCancellationPolicies from './BookingRetrieve200ResponseDataCancellationPolicies';
import BookingRetrieve200ResponseDataContact from './BookingRetrieve200ResponseDataContact';

/**
 * The BookingRetrieve200ResponseData model module.
 * @module model/BookingRetrieve200ResponseData
 * @version 1.0.0
 */
class BookingRetrieve200ResponseData {
    /**
     * Constructs a new <code>BookingRetrieve200ResponseData</code>.
     * @alias module:model/BookingRetrieve200ResponseData
     */
    constructor() { 
        
        BookingRetrieve200ResponseData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BookingRetrieve200ResponseData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BookingRetrieve200ResponseData} obj Optional instance to populate.
     * @return {module:model/BookingRetrieve200ResponseData} The populated <code>BookingRetrieve200ResponseData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BookingRetrieve200ResponseData();

            if (data.hasOwnProperty('bookedRooms')) {
                obj['bookedRooms'] = ApiClient.convertToType(data['bookedRooms'], [BookingRetrieve200ResponseDataBookedRoomsInner]);
            }
            if (data.hasOwnProperty('bookingId')) {
                obj['bookingId'] = ApiClient.convertToType(data['bookingId'], 'String');
            }
            if (data.hasOwnProperty('cancellationPolicies')) {
                obj['cancellationPolicies'] = BookingRetrieve200ResponseDataCancellationPolicies.constructFromObject(data['cancellationPolicies']);
            }
            if (data.hasOwnProperty('contact')) {
                obj['contact'] = BookingRetrieve200ResponseDataContact.constructFromObject(data['contact']);
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');
            }
            if (data.hasOwnProperty('end')) {
                obj['end'] = ApiClient.convertToType(data['end'], 'String');
            }
            if (data.hasOwnProperty('hotelConfirmationCode')) {
                obj['hotelConfirmationCode'] = ApiClient.convertToType(data['hotelConfirmationCode'], 'String');
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BookingRetrieve200ResponseData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BookingRetrieve200ResponseData</code>.
     */
    static validateJSON(data) {
        if (data['bookedRooms']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['bookedRooms'])) {
                throw new Error("Expected the field `bookedRooms` to be an array in the JSON data but got " + data['bookedRooms']);
            }
            // validate the optional field `bookedRooms` (array)
            for (const item of data['bookedRooms']) {
                BookingRetrieve200ResponseDataBookedRoomsInner.validateJsonObject(item);
            };
        }
        // ensure the json data is a string
        if (data['bookingId'] && !(typeof data['bookingId'] === 'string' || data['bookingId'] instanceof String)) {
            throw new Error("Expected the field `bookingId` to be a primitive type in the JSON string but got " + data['bookingId']);
        }
        // validate the optional field `cancellationPolicies`
        if (data['cancellationPolicies']) { // data not null
          BookingRetrieve200ResponseDataCancellationPolicies.validateJSON(data['cancellationPolicies']);
        }
        // validate the optional field `contact`
        if (data['contact']) { // data not null
          BookingRetrieve200ResponseDataContact.validateJSON(data['contact']);
        }
        // ensure the json data is a string
        if (data['createdAt'] && !(typeof data['createdAt'] === 'string' || data['createdAt'] instanceof String)) {
            throw new Error("Expected the field `createdAt` to be a primitive type in the JSON string but got " + data['createdAt']);
        }
        // ensure the json data is a string
        if (data['end'] && !(typeof data['end'] === 'string' || data['end'] instanceof String)) {
            throw new Error("Expected the field `end` to be a primitive type in the JSON string but got " + data['end']);
        }
        // ensure the json data is a string
        if (data['hotelConfirmationCode'] && !(typeof data['hotelConfirmationCode'] === 'string' || data['hotelConfirmationCode'] instanceof String)) {
            throw new Error("Expected the field `hotelConfirmationCode` to be a primitive type in the JSON string but got " + data['hotelConfirmationCode']);
        }
        // ensure the json data is a string
        if (data['start'] && !(typeof data['start'] === 'string' || data['start'] instanceof String)) {
            throw new Error("Expected the field `start` to be a primitive type in the JSON string but got " + data['start']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/BookingRetrieve200ResponseDataBookedRoomsInner>} bookedRooms
 */
BookingRetrieve200ResponseData.prototype['bookedRooms'] = undefined;

/**
 * @member {String} bookingId
 */
BookingRetrieve200ResponseData.prototype['bookingId'] = undefined;

/**
 * @member {module:model/BookingRetrieve200ResponseDataCancellationPolicies} cancellationPolicies
 */
BookingRetrieve200ResponseData.prototype['cancellationPolicies'] = undefined;

/**
 * @member {module:model/BookingRetrieve200ResponseDataContact} contact
 */
BookingRetrieve200ResponseData.prototype['contact'] = undefined;

/**
 * @member {String} createdAt
 */
BookingRetrieve200ResponseData.prototype['createdAt'] = undefined;

/**
 * @member {String} end
 */
BookingRetrieve200ResponseData.prototype['end'] = undefined;

/**
 * @member {String} hotelConfirmationCode
 */
BookingRetrieve200ResponseData.prototype['hotelConfirmationCode'] = undefined;

/**
 * @member {String} start
 */
BookingRetrieve200ResponseData.prototype['start'] = undefined;

/**
 * @member {String} status
 */
BookingRetrieve200ResponseData.prototype['status'] = undefined;






export default BookingRetrieve200ResponseData;

