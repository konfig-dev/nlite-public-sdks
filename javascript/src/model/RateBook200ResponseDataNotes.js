/**
 * nlite API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RateBook200ResponseDataNotes model module.
 * @module model/RateBook200ResponseDataNotes
 * @version 1.0.0
 */
class RateBook200ResponseDataNotes {
    /**
     * Constructs a new <code>RateBook200ResponseDataNotes</code>.
     * @alias module:model/RateBook200ResponseDataNotes
     */
    constructor() { 
        
        RateBook200ResponseDataNotes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RateBook200ResponseDataNotes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RateBook200ResponseDataNotes} obj Optional instance to populate.
     * @return {module:model/RateBook200ResponseDataNotes} The populated <code>RateBook200ResponseDataNotes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RateBook200ResponseDataNotes();

            if (data.hasOwnProperty('fromGuest')) {
                obj['fromGuest'] = ApiClient.convertToType(data['fromGuest'], 'String');
            }
            if (data.hasOwnProperty('fromSeller')) {
                obj['fromSeller'] = ApiClient.convertToType(data['fromSeller'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RateBook200ResponseDataNotes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RateBook200ResponseDataNotes</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['fromGuest'] && !(typeof data['fromGuest'] === 'string' || data['fromGuest'] instanceof String)) {
            throw new Error("Expected the field `fromGuest` to be a primitive type in the JSON string but got " + data['fromGuest']);
        }
        // ensure the json data is a string
        if (data['fromSeller'] && !(typeof data['fromSeller'] === 'string' || data['fromSeller'] instanceof String)) {
            throw new Error("Expected the field `fromSeller` to be a primitive type in the JSON string but got " + data['fromSeller']);
        }

        return true;
    }


}



/**
 * @member {String} fromGuest
 */
RateBook200ResponseDataNotes.prototype['fromGuest'] = undefined;

/**
 * @member {String} fromSeller
 */
RateBook200ResponseDataNotes.prototype['fromSeller'] = undefined;






export default RateBook200ResponseDataNotes;

