/**
 * nlite API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HotelsSearchRequest model module.
 * @module model/HotelsSearchRequest
 * @version 1.0.0
 */
class HotelsSearchRequest {
    /**
     * Constructs a new <code>HotelsSearchRequest</code>.
     * @alias module:model/HotelsSearchRequest
     */
    constructor() { 
        
        HotelsSearchRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HotelsSearchRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HotelsSearchRequest} obj Optional instance to populate.
     * @return {module:model/HotelsSearchRequest} The populated <code>HotelsSearchRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HotelsSearchRequest();

            if (data.hasOwnProperty('adults')) {
                obj['adults'] = ApiClient.convertToType(data['adults'], 'Number');
            }
            if (data.hasOwnProperty('checkin')) {
                obj['checkin'] = ApiClient.convertToType(data['checkin'], 'String');
            }
            if (data.hasOwnProperty('checkout')) {
                obj['checkout'] = ApiClient.convertToType(data['checkout'], 'String');
            }
            if (data.hasOwnProperty('children')) {
                obj['children'] = ApiClient.convertToType(data['children'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('guestNationality')) {
                obj['guestNationality'] = ApiClient.convertToType(data['guestNationality'], 'String');
            }
            if (data.hasOwnProperty('hotelIds')) {
                obj['hotelIds'] = ApiClient.convertToType(data['hotelIds'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HotelsSearchRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HotelsSearchRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['checkin'] && !(typeof data['checkin'] === 'string' || data['checkin'] instanceof String)) {
            throw new Error("Expected the field `checkin` to be a primitive type in the JSON string but got " + data['checkin']);
        }
        // ensure the json data is a string
        if (data['checkout'] && !(typeof data['checkout'] === 'string' || data['checkout'] instanceof String)) {
            throw new Error("Expected the field `checkout` to be a primitive type in the JSON string but got " + data['checkout']);
        }
        // ensure the json data is a string
        if (data['children'] && !(typeof data['children'] === 'string' || data['children'] instanceof String)) {
            throw new Error("Expected the field `children` to be a primitive type in the JSON string but got " + data['children']);
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // ensure the json data is a string
        if (data['guestNationality'] && !(typeof data['guestNationality'] === 'string' || data['guestNationality'] instanceof String)) {
            throw new Error("Expected the field `guestNationality` to be a primitive type in the JSON string but got " + data['guestNationality']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['hotelIds'])) {
            throw new Error("Expected the field `hotelIds` to be an array in the JSON data but got " + data['hotelIds']);
        }

        return true;
    }


}



/**
 * @member {Number} adults
 */
HotelsSearchRequest.prototype['adults'] = undefined;

/**
 * @member {String} checkin
 */
HotelsSearchRequest.prototype['checkin'] = undefined;

/**
 * @member {String} checkout
 */
HotelsSearchRequest.prototype['checkout'] = undefined;

/**
 * @member {String} children
 */
HotelsSearchRequest.prototype['children'] = undefined;

/**
 * @member {String} currency
 */
HotelsSearchRequest.prototype['currency'] = undefined;

/**
 * @member {String} guestNationality
 */
HotelsSearchRequest.prototype['guestNationality'] = undefined;

/**
 * @member {Array.<String>} hotelIds
 */
HotelsSearchRequest.prototype['hotelIds'] = undefined;






export default HotelsSearchRequest;

