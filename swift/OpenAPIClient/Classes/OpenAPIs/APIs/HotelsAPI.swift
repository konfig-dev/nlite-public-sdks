//
// HotelsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class HotelsAPI {

    /**
     Search by Destination/Hotel
     
     - parameter countryCode: (query) country code Alpha-2 code (example US, RU, CN) 
     - parameter hotelName: (query) hotel name (optional)
     - parameter cityName: (query) city name (optional)
     - parameter limit: (query) limit results (max value 1000) (optional)
     - parameter offset: (query) results offset (optional)
     - parameter latitude: (query) latitude geo coordinates (optional)
     - parameter longitude: (query) longtude geo coordinates (optional)
     - parameter distance: (query) the distance starting from the selected geopgraphic point (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getData(countryCode: String, hotelName: String? = nil, cityName: String? = nil, limit: Double? = nil, offset: Double? = nil, latitude: Double? = nil, longitude: Double? = nil, distance: Double? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GetData200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return getDataWithRequestBuilder(countryCode: countryCode, hotelName: hotelName, cityName: cityName, limit: limit, offset: offset, latitude: latitude, longitude: longitude, distance: distance).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Search by Destination/Hotel
     - GET /data
     - 
     - API Key:
       - type: apiKey X-API-KEY 
       - name: ApiKeyAuth
     - parameter countryCode: (query) country code Alpha-2 code (example US, RU, CN) 
     - parameter hotelName: (query) hotel name (optional)
     - parameter cityName: (query) city name (optional)
     - parameter limit: (query) limit results (max value 1000) (optional)
     - parameter offset: (query) results offset (optional)
     - parameter latitude: (query) latitude geo coordinates (optional)
     - parameter longitude: (query) longtude geo coordinates (optional)
     - parameter distance: (query) the distance starting from the selected geopgraphic point (optional)
     - returns: RequestBuilder<GetData200Response> 
     */
    open class func getDataWithRequestBuilder(countryCode: String, hotelName: String? = nil, cityName: String? = nil, limit: Double? = nil, offset: Double? = nil, latitude: Double? = nil, longitude: Double? = nil, distance: Double? = nil) -> RequestBuilder<GetData200Response> {
        let localVariablePath = "/data"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "hotelName": (wrappedValue: hotelName?.encodeToJSON(), isExplode: true),
            "cityName": (wrappedValue: cityName?.encodeToJSON(), isExplode: true),
            "countryCode": (wrappedValue: countryCode.encodeToJSON(), isExplode: true),
            "limit": (wrappedValue: limit?.encodeToJSON(), isExplode: true),
            "offset": (wrappedValue: offset?.encodeToJSON(), isExplode: true),
            "latitude": (wrappedValue: latitude?.encodeToJSON(), isExplode: true),
            "longitude": (wrappedValue: longitude?.encodeToJSON(), isExplode: true),
            "distance": (wrappedValue: distance?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetData200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get Room Availability & Rates for a Hotel ID
     
     - parameter hotelId: (path)  
     - parameter rid: (header)  (optional)
     - parameter xid: (header)  (optional)
     - parameter checkin: (query)  (optional)
     - parameter checkout: (query)  (optional)
     - parameter adults: (query)  (optional)
     - parameter guestNationality: (query)  (optional)
     - parameter currency: (query)  (optional)
     - parameter sessionId: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func hotelsHotelIdGet(hotelId: Int, rid: String? = nil, xid: String? = nil, checkin: String? = nil, checkout: String? = nil, adults: Int? = nil, guestNationality: String? = nil, currency: String? = nil, sessionId: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: AnyCodable?, _ error: Error?) -> Void)) -> RequestTask {
        return hotelsHotelIdGetWithRequestBuilder(hotelId: hotelId, rid: rid, xid: xid, checkin: checkin, checkout: checkout, adults: adults, guestNationality: guestNationality, currency: currency, sessionId: sessionId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Room Availability & Rates for a Hotel ID
     - GET /hotels/{hotelId}
     - This endpoint allows you to send a hotel ID with a specific date range and in response receive all the rooms, rates that are available along with the cancelllation policies.
     - API Key:
       - type: apiKey X-API-KEY 
       - name: ApiKeyAuth
     - responseHeaders: [Access-Control-Allow-Credentials(Bool), Access-Control-Allow-Headers(String), Access-Control-Allow-Methods(String), Access-Control-Allow-Origin(String), Access-Control-Expose-Headers(String), Access-Control-Max-Age(Int), Content-Type(String), Date(String), Transfer-Encoding(String)]
     - parameter hotelId: (path)  
     - parameter rid: (header)  (optional)
     - parameter xid: (header)  (optional)
     - parameter checkin: (query)  (optional)
     - parameter checkout: (query)  (optional)
     - parameter adults: (query)  (optional)
     - parameter guestNationality: (query)  (optional)
     - parameter currency: (query)  (optional)
     - parameter sessionId: (query)  (optional)
     - returns: RequestBuilder<AnyCodable> 
     */
    open class func hotelsHotelIdGetWithRequestBuilder(hotelId: Int, rid: String? = nil, xid: String? = nil, checkin: String? = nil, checkout: String? = nil, adults: Int? = nil, guestNationality: String? = nil, currency: String? = nil, sessionId: String? = nil) -> RequestBuilder<AnyCodable> {
        var localVariablePath = "/hotels/{hotelId}"
        let hotelIdPreEscape = "\(APIHelper.mapValueToPathItem(hotelId))"
        let hotelIdPostEscape = hotelIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{hotelId}", with: hotelIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "checkin": (wrappedValue: checkin?.encodeToJSON(), isExplode: true),
            "checkout": (wrappedValue: checkout?.encodeToJSON(), isExplode: true),
            "adults": (wrappedValue: adults?.encodeToJSON(), isExplode: true),
            "guestNationality": (wrappedValue: guestNationality?.encodeToJSON(), isExplode: true),
            "currency": (wrappedValue: currency?.encodeToJSON(), isExplode: true),
            "sessionId": (wrappedValue: sessionId?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            "rid": rid?.encodeToJSON(),
            "xid": xid?.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AnyCodable>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get Minimum Price for Available Hotels
     
     - parameter rid: (header)  (optional)
     - parameter hotelsPostRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func hotelsPost(rid: String? = nil, hotelsPostRequest: HotelsPostRequest? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: AnyCodable?, _ error: Error?) -> Void)) -> RequestTask {
        return hotelsPostWithRequestBuilder(rid: rid, hotelsPostRequest: hotelsPostRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Minimum Price for Available Hotels
     - POST /hotels
     - This endpoint allows you to send a list of hotel ID's for a specific date range and in response receive the best rate available for each of the hotel ID's. The limit is set to 200 hotels.
     - API Key:
       - type: apiKey X-API-KEY 
       - name: ApiKeyAuth
     - responseHeaders: [Access-Control-Allow-Credentials(Bool), Access-Control-Allow-Headers(String), Access-Control-Allow-Methods(String), Access-Control-Allow-Origin(String), Access-Control-Expose-Headers(String), Access-Control-Max-Age(Int), Content-Type(String), Date(String), Content-Length(Int)]
     - parameter rid: (header)  (optional)
     - parameter hotelsPostRequest: (body)  (optional)
     - returns: RequestBuilder<AnyCodable> 
     */
    open class func hotelsPostWithRequestBuilder(rid: String? = nil, hotelsPostRequest: HotelsPostRequest? = nil) -> RequestBuilder<AnyCodable> {
        let localVariablePath = "/hotels"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: hotelsPostRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "rid": rid?.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AnyCodable>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
