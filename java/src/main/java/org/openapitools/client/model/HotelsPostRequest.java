/*
 * Lite API
 * lite api hotel booking api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * HotelsPostRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-22T15:58:41.172985+01:00[Africa/Casablanca]")
public class HotelsPostRequest {
  public static final String SERIALIZED_NAME_CHECKIN = "checkin";
  @SerializedName(SERIALIZED_NAME_CHECKIN)
  private String checkin;

  public static final String SERIALIZED_NAME_CHECKOUT = "checkout";
  @SerializedName(SERIALIZED_NAME_CHECKOUT)
  private String checkout;

  public static final String SERIALIZED_NAME_LATITUDE = "latitude";
  @SerializedName(SERIALIZED_NAME_LATITUDE)
  private BigDecimal latitude;

  public static final String SERIALIZED_NAME_LONGITUDE = "longitude";
  @SerializedName(SERIALIZED_NAME_LONGITUDE)
  private BigDecimal longitude;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_DISTANCE = "distance";
  @SerializedName(SERIALIZED_NAME_DISTANCE)
  private Integer distance;

  public static final String SERIALIZED_NAME_ADULTS = "adults";
  @SerializedName(SERIALIZED_NAME_ADULTS)
  private Integer adults;

  public static final String SERIALIZED_NAME_CHILDREN = "children";
  @SerializedName(SERIALIZED_NAME_CHILDREN)
  private String children;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_GUEST_NATIONALITY = "guestNationality";
  @SerializedName(SERIALIZED_NAME_GUEST_NATIONALITY)
  private String guestNationality;

  public HotelsPostRequest() {
  }

  public HotelsPostRequest checkin(String checkin) {
    
    this.checkin = checkin;
    return this;
  }

   /**
   * Get checkin
   * @return checkin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCheckin() {
    return checkin;
  }


  public void setCheckin(String checkin) {
    this.checkin = checkin;
  }


  public HotelsPostRequest checkout(String checkout) {
    
    this.checkout = checkout;
    return this;
  }

   /**
   * Get checkout
   * @return checkout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCheckout() {
    return checkout;
  }


  public void setCheckout(String checkout) {
    this.checkout = checkout;
  }


  public HotelsPostRequest latitude(BigDecimal latitude) {
    
    this.latitude = latitude;
    return this;
  }

   /**
   * Get latitude
   * @return latitude
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getLatitude() {
    return latitude;
  }


  public void setLatitude(BigDecimal latitude) {
    this.latitude = latitude;
  }


  public HotelsPostRequest longitude(BigDecimal longitude) {
    
    this.longitude = longitude;
    return this;
  }

   /**
   * Get longitude
   * @return longitude
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getLongitude() {
    return longitude;
  }


  public void setLongitude(BigDecimal longitude) {
    this.longitude = longitude;
  }


  public HotelsPostRequest country(String country) {
    
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCountry() {
    return country;
  }


  public void setCountry(String country) {
    this.country = country;
  }


  public HotelsPostRequest distance(Integer distance) {
    
    this.distance = distance;
    return this;
  }

   /**
   * Get distance
   * @return distance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDistance() {
    return distance;
  }


  public void setDistance(Integer distance) {
    this.distance = distance;
  }


  public HotelsPostRequest adults(Integer adults) {
    
    this.adults = adults;
    return this;
  }

   /**
   * Get adults
   * @return adults
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAdults() {
    return adults;
  }


  public void setAdults(Integer adults) {
    this.adults = adults;
  }


  public HotelsPostRequest children(String children) {
    
    this.children = children;
    return this;
  }

   /**
   * Get children
   * @return children
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChildren() {
    return children;
  }


  public void setChildren(String children) {
    this.children = children;
  }


  public HotelsPostRequest currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public HotelsPostRequest guestNationality(String guestNationality) {
    
    this.guestNationality = guestNationality;
    return this;
  }

   /**
   * Get guestNationality
   * @return guestNationality
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGuestNationality() {
    return guestNationality;
  }


  public void setGuestNationality(String guestNationality) {
    this.guestNationality = guestNationality;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HotelsPostRequest hotelsPostRequest = (HotelsPostRequest) o;
    return Objects.equals(this.checkin, hotelsPostRequest.checkin) &&
        Objects.equals(this.checkout, hotelsPostRequest.checkout) &&
        Objects.equals(this.latitude, hotelsPostRequest.latitude) &&
        Objects.equals(this.longitude, hotelsPostRequest.longitude) &&
        Objects.equals(this.country, hotelsPostRequest.country) &&
        Objects.equals(this.distance, hotelsPostRequest.distance) &&
        Objects.equals(this.adults, hotelsPostRequest.adults) &&
        Objects.equals(this.children, hotelsPostRequest.children) &&
        Objects.equals(this.currency, hotelsPostRequest.currency) &&
        Objects.equals(this.guestNationality, hotelsPostRequest.guestNationality);
  }

  @Override
  public int hashCode() {
    return Objects.hash(checkin, checkout, latitude, longitude, country, distance, adults, children, currency, guestNationality);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HotelsPostRequest {\n");
    sb.append("    checkin: ").append(toIndentedString(checkin)).append("\n");
    sb.append("    checkout: ").append(toIndentedString(checkout)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    adults: ").append(toIndentedString(adults)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    guestNationality: ").append(toIndentedString(guestNationality)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("checkin");
    openapiFields.add("checkout");
    openapiFields.add("latitude");
    openapiFields.add("longitude");
    openapiFields.add("country");
    openapiFields.add("distance");
    openapiFields.add("adults");
    openapiFields.add("children");
    openapiFields.add("currency");
    openapiFields.add("guestNationality");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to HotelsPostRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!HotelsPostRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in HotelsPostRequest is not found in the empty JSON string", HotelsPostRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!HotelsPostRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `HotelsPostRequest` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("checkin") != null && !jsonObj.get("checkin").isJsonNull()) && !jsonObj.get("checkin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `checkin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("checkin").toString()));
      }
      if ((jsonObj.get("checkout") != null && !jsonObj.get("checkout").isJsonNull()) && !jsonObj.get("checkout").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `checkout` to be a primitive type in the JSON string but got `%s`", jsonObj.get("checkout").toString()));
      }
      if ((jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      if ((jsonObj.get("children") != null && !jsonObj.get("children").isJsonNull()) && !jsonObj.get("children").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `children` to be a primitive type in the JSON string but got `%s`", jsonObj.get("children").toString()));
      }
      if ((jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) && !jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
      if ((jsonObj.get("guestNationality") != null && !jsonObj.get("guestNationality").isJsonNull()) && !jsonObj.get("guestNationality").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guestNationality` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guestNationality").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!HotelsPostRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'HotelsPostRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<HotelsPostRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(HotelsPostRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<HotelsPostRequest>() {
           @Override
           public void write(JsonWriter out, HotelsPostRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public HotelsPostRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of HotelsPostRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of HotelsPostRequest
  * @throws IOException if the JSON string is invalid with respect to HotelsPostRequest
  */
  public static HotelsPostRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, HotelsPostRequest.class);
  }

 /**
  * Convert an instance of HotelsPostRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

